
&НаСервере
Процедура ЗагрузитьАкцииНаСервере()
	Адрес = мс_РаботаСОзон.Акции(Модель);
	Если Не ЭтоАдресВременногоХранилища(Адрес) Тогда
		Возврат;
	КонецЕсли;
	
	Акции.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьАкции(Команда)
	Акции.Очистить();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ЗагрузитьАкцииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТоварыНаСервере()
	Адрес = мс_РаботаСОзон.ЦеныТоваровМодели(Модель);
	Если Не ЭтоАдресВременногоХранилища(Адрес) Тогда
		Возврат;
	КонецЕсли;
	
	ЦеныТоваров = ПолучитьИзВременногоХранилища(Адрес);
	Если ТипЗнч(ЦеныТоваров) = Тип("Массив") Тогда
		ВывестиНенайденнуюНоменклатуру(ЦеныТоваров);
		
		Возврат;
	КонецЕсли;
	
	Товары.Загрузить(ЦеныТоваров);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТовары(Команда)
	Товары.Очистить();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ЗагрузитьТоварыНаСервере();
КонецПроцедуры

#Область ВспомогательныеПроцедурыИФункции

Процедура ВывестиНенайденнуюНоменклатуру(КодыТоваров)
	#Если Сервер И Не Сервер Тогда
		КодыТоваров = Новый Массив;
	#КонецЕсли
	Если КодыТоваров.Количество() = 0 Тогда
		ТекстСообщения = "Номенклатура не найдена";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Товары", "Товары");
		
		Возврат;
	КонецЕсли;
	
	Для Каждого Код Из КодыТоваров Цикл
		ТекстСообщения = СтрШаблон("Для кода %1 номенклатура не найдена.", Код);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Товары", "Товары");
	КонецЦикла;
КонецПроцедуры

#КонецОбласти